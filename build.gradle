plugins {
    id 'org.openjfx.javafxplugin' version '0.0.9'
    id 'org.beryx.jlink' version '2.22.2'
    id 'com.coditory.manifest' version '0.1.8'
}

def inc(module) {
    apply from: "${projectDir}/gradle/${module}.gradle"
}

inc('version')

group = 'nu.mine.mosher.gedcom'

java {
    sourceCompatibility = JavaVersion.VERSION_13
    modularity.inferModulePath.set(true)
}

inc('dependencies')

application {
    mainModule.set 'nu.mine.mosher.gedcom.xy'
    mainClass.set 'nu.mine.mosher.gedcom.xy.GenXyEditor'
}

javafx {
    modules = [
        'javafx.controls'
    ]
}

jar {
    manifest {
        attributes(
            'Specification-Version': manifest.attributes.get('Implementation-Version'),
            'Implementation-Version': manifest.attributes.get('Implementation-Version').toString()+"+"+manifest.attributes.get('SCM-Commit-Hash').toString()
        )
    }
}

def os = org.gradle.internal.os.OperatingSystem.current()
println "detected OS: ${os}"

jlink {
    mergedModule {
        additive = true
        requires 'org.slf4j'
    }
    jpackage {
        if (os.windows) {
            installerOptions += [
                '--win-dir-chooser',
                '--win-menu',
                '--win-shortcut'
            ]
        } else if (os.linux) {
            installerOptions += [
                '--linux-shortcut'
            ]
        }
        installerOptions += [ '--verbose' ]
    }
}

assemble {
    dependsOn tasks.jpackage
}

//kludge to work around bug when running from IntelliJ. See https://youtrack.jetbrains.com/issue/IDEA-197469
//sourceSets {
//    main {
//        output.resourcesDir = java.outputDir
//    }
//}
