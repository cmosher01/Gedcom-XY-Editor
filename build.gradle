plugins {
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
    id 'com.coditory.manifest' version '0.2.1'
}

def versionSimple = '2.2.4'
version = versionSimple+'+'+jar.manifest.attributes.get('SCM-Commit-Hash')

group = 'nu.mine.mosher.gedcom'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of 17
    }
    modularity.inferModulePath = true
}

repositories {
    mavenCentral()
    maven {
        url = uri('https://public:\u0067hp_fya6Kseu3XOBMg2icbg7f1LP6ZFYjj35v4Zj@maven.pkg.github.com/cmosher01/*')
    }
}

dependencies {
    implementation group: 'nu.mine.mosher.gedcom', name: 'gedcom-lib', version: 'latest.release', {
        exclude group: 'nu.mine.mosher.mopper', module: 'mopper'
    }
    implementation group: 'org.xerial', name: 'sqlite-jdbc', version: 'latest.release'
    implementation group: 'com.itextpdf', name: 'itext7-core', version: 'latest.release'

    implementation group: 'nu.mine.mosher.io', name: 'log-files', version: 'latest.release'

    implementation group: 'org.slf4j', name: 'jcl-over-slf4j', version: 'latest.integration'
    implementation group: 'org.slf4j', name: 'log4j-over-slf4j', version: 'latest.integration'
    implementation group: 'org.slf4j', name: 'jul-to-slf4j', version: 'latest.integration'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: 'latest.integration'
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: 'latest.release'
}

application {
    mainModule = 'nu.mine.mosher.gedcom.xy'
    mainClass = 'nu.mine.mosher.gedcom.xy.GenXyEditor'
}

javafx {
    modules = [
        'javafx.controls',
        'javafx.swing'
    ]
}

def os = org.gradle.internal.os.OperatingSystem.current()
println "detected OS: ${os}"

jlink {
    mergedModule {
        additive = true
        requires 'org.slf4j'
    }
    jpackage {
        appVersion = versionSimple
        if (os.windows) {
            installerOptions += [
                '--win-dir-chooser',
                '--win-menu',
                '--win-shortcut'
            ]
        } else if (os.linux) {
            installerOptions += [
                '--linux-shortcut'
            ]
        }
        installerOptions += [ '--verbose' ]
    }
}

tasks.assemble.dependsOn tasks.jpackage
